// Generated by view binder compiler. Do not edit!
package com.example.rustmarketfyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rustmarketfyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchProductsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Spinner categoryspinner;

  @NonNull
  public final View div1;

  @NonNull
  public final View div2;

  @NonNull
  public final View divlayout1;

  @NonNull
  public final View divlayout2;

  @NonNull
  public final Spinner locationspinner;

  @NonNull
  public final RelativeLayout r5;

  @NonNull
  public final Button searchBtn;

  @NonNull
  public final RecyclerView searchList;

  @NonNull
  public final EditText searchProductName;

  @NonNull
  public final RelativeLayout sortbar;

  @NonNull
  public final Spinner sortspinner;

  private ActivitySearchProductsBinding(@NonNull RelativeLayout rootView,
      @NonNull Spinner categoryspinner, @NonNull View div1, @NonNull View div2,
      @NonNull View divlayout1, @NonNull View divlayout2, @NonNull Spinner locationspinner,
      @NonNull RelativeLayout r5, @NonNull Button searchBtn, @NonNull RecyclerView searchList,
      @NonNull EditText searchProductName, @NonNull RelativeLayout sortbar,
      @NonNull Spinner sortspinner) {
    this.rootView = rootView;
    this.categoryspinner = categoryspinner;
    this.div1 = div1;
    this.div2 = div2;
    this.divlayout1 = divlayout1;
    this.divlayout2 = divlayout2;
    this.locationspinner = locationspinner;
    this.r5 = r5;
    this.searchBtn = searchBtn;
    this.searchList = searchList;
    this.searchProductName = searchProductName;
    this.sortbar = sortbar;
    this.sortspinner = sortspinner;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryspinner;
      Spinner categoryspinner = ViewBindings.findChildViewById(rootView, id);
      if (categoryspinner == null) {
        break missingId;
      }

      id = R.id.div1;
      View div1 = ViewBindings.findChildViewById(rootView, id);
      if (div1 == null) {
        break missingId;
      }

      id = R.id.div2;
      View div2 = ViewBindings.findChildViewById(rootView, id);
      if (div2 == null) {
        break missingId;
      }

      id = R.id.divlayout1;
      View divlayout1 = ViewBindings.findChildViewById(rootView, id);
      if (divlayout1 == null) {
        break missingId;
      }

      id = R.id.divlayout2;
      View divlayout2 = ViewBindings.findChildViewById(rootView, id);
      if (divlayout2 == null) {
        break missingId;
      }

      id = R.id.locationspinner;
      Spinner locationspinner = ViewBindings.findChildViewById(rootView, id);
      if (locationspinner == null) {
        break missingId;
      }

      id = R.id.r5;
      RelativeLayout r5 = ViewBindings.findChildViewById(rootView, id);
      if (r5 == null) {
        break missingId;
      }

      id = R.id.search_btn;
      Button searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.search_list;
      RecyclerView searchList = ViewBindings.findChildViewById(rootView, id);
      if (searchList == null) {
        break missingId;
      }

      id = R.id.search_product_name;
      EditText searchProductName = ViewBindings.findChildViewById(rootView, id);
      if (searchProductName == null) {
        break missingId;
      }

      id = R.id.sortbar;
      RelativeLayout sortbar = ViewBindings.findChildViewById(rootView, id);
      if (sortbar == null) {
        break missingId;
      }

      id = R.id.sortspinner;
      Spinner sortspinner = ViewBindings.findChildViewById(rootView, id);
      if (sortspinner == null) {
        break missingId;
      }

      return new ActivitySearchProductsBinding((RelativeLayout) rootView, categoryspinner, div1,
          div2, divlayout1, divlayout2, locationspinner, r5, searchBtn, searchList,
          searchProductName, sortbar, sortspinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
