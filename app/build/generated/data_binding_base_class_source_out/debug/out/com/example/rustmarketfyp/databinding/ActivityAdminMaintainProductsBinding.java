// Generated by view binder compiler. Do not edit!
package com.example.rustmarketfyp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.rustmarketfyp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminMaintainProductsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button applyChangesBtn;

  @NonNull
  public final Button deleteProductBtn;

  @NonNull
  public final EditText productDescriptionMaintain;

  @NonNull
  public final ImageView productImageMaintain;

  @NonNull
  public final EditText productNameMaintain;

  @NonNull
  public final EditText productPriceMaintain;

  private ActivityAdminMaintainProductsBinding(@NonNull CardView rootView,
      @NonNull Button applyChangesBtn, @NonNull Button deleteProductBtn,
      @NonNull EditText productDescriptionMaintain, @NonNull ImageView productImageMaintain,
      @NonNull EditText productNameMaintain, @NonNull EditText productPriceMaintain) {
    this.rootView = rootView;
    this.applyChangesBtn = applyChangesBtn;
    this.deleteProductBtn = deleteProductBtn;
    this.productDescriptionMaintain = productDescriptionMaintain;
    this.productImageMaintain = productImageMaintain;
    this.productNameMaintain = productNameMaintain;
    this.productPriceMaintain = productPriceMaintain;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminMaintainProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminMaintainProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_maintain_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminMaintainProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apply_changes_btn;
      Button applyChangesBtn = ViewBindings.findChildViewById(rootView, id);
      if (applyChangesBtn == null) {
        break missingId;
      }

      id = R.id.delete_product_btn;
      Button deleteProductBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteProductBtn == null) {
        break missingId;
      }

      id = R.id.product_description_maintain;
      EditText productDescriptionMaintain = ViewBindings.findChildViewById(rootView, id);
      if (productDescriptionMaintain == null) {
        break missingId;
      }

      id = R.id.product_image_maintain;
      ImageView productImageMaintain = ViewBindings.findChildViewById(rootView, id);
      if (productImageMaintain == null) {
        break missingId;
      }

      id = R.id.product_name_maintain;
      EditText productNameMaintain = ViewBindings.findChildViewById(rootView, id);
      if (productNameMaintain == null) {
        break missingId;
      }

      id = R.id.product_price_maintain;
      EditText productPriceMaintain = ViewBindings.findChildViewById(rootView, id);
      if (productPriceMaintain == null) {
        break missingId;
      }

      return new ActivityAdminMaintainProductsBinding((CardView) rootView, applyChangesBtn,
          deleteProductBtn, productDescriptionMaintain, productImageMaintain, productNameMaintain,
          productPriceMaintain);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
